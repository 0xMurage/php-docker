name: CI/CD
on:
  push:
    branches:
      - master

jobs:
  sematic_release:
    name: Semantic release
    runs-on: ubuntu-latest
    outputs:
      has_published: ${{steps.semver.outputs.new_release_published}}
      version: ${{steps.semver.outputs.new_release_version}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Semantic Release
        id: semver
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_7x:
    needs: sematic_release
    if: needs.sematic_release.outputs.has_published == 'true' #only if there is a new release
    name: Build and release for PHP 7.x
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check which image to build
        id: phpcheck
        uses: dorny/paths-filter@v2
        with:
          filters: |
            php74:
              - 'php7.4/**'

      - name: Build PHP 74 image
        if: steps.phpcheck.outputs.php74 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php7.4:${{needs.sematic_release.outputs.version}}
          file: ./php7.4/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}

      - name: Build PHP 7.5 composer image
        if: steps.phpcheck.outputs.php74 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php7.4-composer:${{needs.sematic_release.outputs.version}}
          file: ./composer/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}
          build_args: |
            BASE_IMAGE=${{secrets.DOCKER_USERNAME}}/php7.4:${{needs.sematic_release.outputs.version}}

  release_80:
    needs: sematic_release
    if: needs.sematic_release.outputs.has_published == 'true' #only if there is a new release
    name: Build and release for PHP 8.0
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check which image to build
        id: phpcheck
        uses: dorny/paths-filter@v2
        with:
          filters: |
            php80:
              - 'php8.0/**'

      - name: Build PHP 80 image
        if: steps.phpcheck.outputs.php80 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php8.0:${{needs.sematic_release.outputs.version}}
          file: ./php8.0/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}

      - name: Build PHP 80 composer image
        if: steps.phpcheck.outputs.php80 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php8.0-composer:${{needs.sematic_release.outputs.version}}
          file: ./composer/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}
          build_args: |
            BASE_IMAGE=${{secrets.DOCKER_USERNAME}}/php8.0:${{needs.sematic_release.outputs.version}}
  release_81:
    needs: sematic_release
    if: needs.sematic_release.outputs.has_published == 'true' #only if there is a new release
    name: Build and release for PHP 8.1
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Check which image to build
        id: phpcheck
        uses: dorny/paths-filter@v2
        with:
          filters: |
            php81:
              - 'php8.1/**'

      - name: Build PHP 81 image
        if: steps.phpcheck.outputs.php81 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php8.1:${{needs.sematic_release.outputs.version}}
          file: ./php8.1/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}

      - name: Build PHP 81 composer image
        if: steps.phpcheck.outputs.php81 == 'true'
        uses: ./.github/actions/build-images
        with:
          tags: ${{secrets.DOCKER_USERNAME}}/php8.1-composer:${{needs.sematic_release.outputs.version}}
          file: ./composer/Dockerfile
          username: ${{secrets.DOCKER_USERNAME}}
          token: ${{secrets.DOCKER_TOKEN}}
          build_args: |
            BASE_IMAGE=${{secrets.DOCKER_USERNAME}}/php8.1:${{needs.sematic_release.outputs.version}}